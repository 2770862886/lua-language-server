[default]
type = 'function'

[assert]
[[.args]]
name = 'v'
[[.args]]
name = 'message'
[[.returns]]

[collectgarbage]
[[.args]]
name = 'opt'
type = 'string'
optional = 'after'
[[.args]]
name = 'arg'
type = 'integer'
optional = 'self'
[[.returns]]
[[.enums]]
name = 'opt'
enum = 'collect'
default = true
[[.enums]]
name = 'opt'
enum = 'stop'
[[.enums]]
name = 'opt'
enum = 'restart'
[[.enums]]
name = 'opt'
enum = 'count'
[[.enums]]
name = 'opt'
enum = 'step'
[[.enums]]
name = 'opt'
enum = 'setpause'
[[.enums]]
name = 'opt'
enum = 'setstepmul'
[[.enums]]
name = 'opt'
enum = 'isrunning'

[dofile]
[[.args]]
name = 'filename'
type = 'string'
optional = 'self'
[[.returns]]

[error]
[[.args]]
name = 'message'
[[.args]]
name = 'level'
type = 'integer'
optional = 'self'

[_G]
type = 'table'

[getmetatable]
[[.args]]
name = 'object'
[[.returns]]
name = 'metatable'
type = 'table'

[ipairs]
[[.args]]
name = 't'
type = 'table'
[[.returns]]
name = 'iterator'
type = 'function'
returns = {
    1 = {
        name = 'i',
        type = 'integer',
    },
    2 = {
        name = 'object',
    },
}
[[.returns]]
name = 't'
type = 'table'
[[.returns]]
name = 'i'
type = 'integer'
default = 0

[load]
[[.args]]
name = 'chunk'
type = {'string', 'function'}
[[.args]]
name = 'chunkname'
type = 'string'
optional = 'after'
[[.args]]
name = 'mode'
type = 'string'
optional = 'after'
[[.args]]
name = 'env'
type = 'table'
optional = 'self'
[[.returns]]
type = 'function'
[[.returns]]
name = 'error_message'
type = 'string'
[[.enums]]
name = 'mode'
enum = 'b'
[[.enums]]
name = 'mode'
enum = 't'
[[.enums]]
name = 'mode'
enum = 'bt'

[loadfile]
[[.args]]
name = 'filename'
type = 'string'
optional = 'after'
[[.args]]
name = 'mode'
type = 'string'
optional = 'after'
[[.args]]
name = 'env'
type = 'table'
optional = 'self'
[[.returns]]
type = 'function'
[[.returns]]
name = 'error_message'
type = 'string'
[[.enums]]
name = 'mode'
enum = 'b'
[[.enums]]
name = 'mode'
enum = 't'
[[.enums]]
name = 'mode'
enum = 'bt'

[next]
[[.args]]
name = 'table'
type = 'table'
[[.args]]
name = 'index'
optional = 'self'
[[.returns]]
name = 'key'
[[.returns]]
name = 'value'

[pairs]
[[.args]]
name = 't'
type = 'table'
[[.returns]]
name = 'next'
type = 'function'
returns = {
    1 = {
        name = 'key',
    },
    2 = {
        name = 'value',
    },
}
[[.returns]]
name = 't'
type = 'table'
[[.returns]]
type = 'nil'

[pcall]
[[.args]]
name = 'f'
type = 'function'
[[.args]]
name = 'arg1'
optional = 'after'
[[.args]]
type = '...'
[[.returns]]
name = 'success'
type = 'boolean'
[[.returns]]
name = 'result'
[[.returns]]
type = '...'

[print]

[rawequal]

[rawget]

[rawlen]

[rawset]

[select]

[setmetatable]
special = 'setmetatable'
[[.args]]
name = 'table'
type = 'table'
[[.args]]
name = 'metatable'
type = 'table'
[[.returns]]
type = 'table'

[tonumber]

[tostring]

[type]

[_VERSION]
type = 'string'
value = 'Lua5.3'

[xpcall]
