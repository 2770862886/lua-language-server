<default>
type = 'function'

[arg]
type = 'table'

[assert]
[[.args]]
name = 'v'
``````````
name = 'message'
[[.returns]]

[collectgarbage]
[[.args]]
name = 'opt'
type = 'string'
optional = 'after'
``````````
name = 'arg'
type = 'integer'
optional = 'self'
[[.returns]]
[[.enums]]
name = 'opt'
enum = 'collect'
default = true
``````````
name = 'opt'
enum = 'stop'
``````````
name = 'opt'
enum = 'restart'
``````````
name = 'opt'
enum = 'count'
``````````
name = 'opt'
enum = 'step'
``````````
name = 'opt'
enum = 'setpause'
``````````
name = 'opt'
enum = 'setstepmul'
``````````
name = 'opt'
enum = 'isrunning'

[dofile]
special = 'dofile'
[[.args]]
name = 'filename'
type = 'string'
optional = 'self'
[[.returns]]

[error]
[[.args]]
name = 'message'
``````````
name = 'level'
type = 'integer'
optional = 'self'

[_G]
type = 'table'

[getmetatable]
[[.args]]
name = 'object'
[[.returns]]
name = 'metatable'
type = 'table'

[ipairs]
[[.args]]
name = 't'
type = 'table'
[[.returns]]
name = 'iterator'
type = 'function'
args = {
    1 = {
        name = 'table',
        type = 'table',
    },
    2 = {
        name = 'i',
        type = 'integer',
    }
}
returns = {
    1 = {
        name = 'i',
        type = 'integer',
    },
    2 = {
        name = 'object',
    },
}
``````````
name = 't'
type = 'table'
``````````
name = 'i'
type = 'integer'
default = 0

[load]
[[.args]]
name = 'chunk'
type = {'string', 'function'}
``````````
name = 'chunkname'
type = 'string'
optional = 'after'
``````````
name = 'mode'
type = 'string'
optional = 'after'
``````````
name = 'env'
type = 'table'
optional = 'self'
[[.returns]]
type = 'function'
args = {
    1 = {
        type = '...'
    },
}
``````````
name = 'error_message'
type = 'string'
[[.enums]]
name = 'mode'
enum = 'b'
``````````
name = 'mode'
enum = 't'
``````````
name = 'mode'
enum = 'bt'
default = true

[loadfile]
special = 'loadfile'
[[.args]]
name = 'filename'
type = 'string'
optional = 'after'
``````````
name = 'mode'
type = 'string'
optional = 'after'
``````````
name = 'env'
type = 'table'
optional = 'self'
[[.returns]]
type = 'function'
args = {
    1 = {
        type = '...'
    },
}
``````````
name = 'error_message'
type = 'string'
[[.enums]]
name = 'mode'
enum = 'b'
``````````
name = 'mode'
enum = 't'
``````````
name = 'mode'
enum = 'bt'
default = true

[next]
[[.args]]
name = 'table'
type = 'table'
``````````
name = 'index'
optional = 'self'
[[.returns]]
name = 'key'
``````````
name = 'value'

[pairs]
[[.args]]
name = 't'
type = 'table'
[[.returns]]
name = 'next'
type = 'function'
args = {
    1 = {
        name = 'table',
        type = 'table',
    },
    2 = {
        name = 'index',
        optional = 'self',
    },
}
returns = {
    1 = {
        name = 'key',
    },
    2 = {
        name = 'value',
    },
}
``````````
name = 't'
type = 'table'
``````````
type = 'nil'

[pcall]
[[.args]]
name = 'f'
type = 'function'
``````````
name = 'arg1'
optional = 'after'
``````````
type = '...'
[[.returns]]
name = 'success'
type = 'boolean'
``````````
name = 'result'
``````````
type = '...'

[print]
[[.args]]
type = '...'

[rawequal]
[[.args]]
name = 'v1'
``````````
name = 'v2'
[[.returns]]
type = 'boolean'

[rawget]
[[.args]]
name = 'table'
type = 'table'
``````````
name = 'index'
[[.returns]]

[rawlen]
[[.args]]
name = 'v'
type = {'table', 'string'}
[[.returns]]
name = 'len'
type = 'integer'

[rawset]
[[.args]]
name = 'table'
type = 'table'
``````````
name = 'index'
``````````
name = 'value'
[[.returns]]
name = 'table'
type = 'table'

[select]
[[.args]]
name = 'index'
type = {'string', 'integer'}
``````````
type = '...'
[[.returns]]
[[.enums]]
name = 'index'
enum = '#'
``````````
name = 'index'
code = 'integer'

[setmetatable]
special = 'setmetatable'
[[.args]]
name = 'table'
type = 'table'
``````````
name = 'metatable'
type = 'table'
[[.returns]]
type = 'table'

[tonumber]
[[.args]]
name = 'e'
type = {'string', 'number'}
``````````
name = 'base'
type = 'integer'
optional = 'self'
[[.returns]]
type = 'number'

[tostring]
[[.args]]
name = 'v'
[[.returns]]
type = 'string'

[type]
[[.args]]
name = 'v'
[[.returns]]
name = 'type'
type = 'string'
[[.enums]]
name = 'type'
enum = 'nil'
``````````
name = 'type'
enum = 'number'
``````````
name = 'type'
enum = 'string'
``````````
name = 'type'
enum = 'boolean'
``````````
name = 'type'
enum = 'table'
``````````
name = 'type'
enum = 'function'
``````````
name = 'type'
enum = 'thread'
``````````
name = 'type'
enum = 'userdata'

[_VERSION]
type = 'string'
value = 'Lua5.3'

[xpcall]
[[.args]]
name = 'f'
type = 'function'
``````````
name = 'msgh'
type = 'function'
``````````
name = 'arg1'
optional = 'after'
``````````
type = '...'
[[.returns]]
name = 'success'
type = 'boolean'
``````````
name = 'result'
``````````
type = '...'

[require]
special = 'require'
[[.args]]
name = 'modname'
type = 'string'
[[.returns]]
